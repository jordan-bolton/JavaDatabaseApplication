/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Account.Customer;
import Core.Control;
import DatabaseConnect.DBConnect;
import static GUI.UpdateJobForm.BOLD;
import static Processing.PDFCreator.getAddressTable;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Text;
import com.itextpdf.layout.property.TextAlignment;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author paul
 */
public class MotRemindersForm extends javax.swing.JFrame {

    Control control;
    DBConnect dbConnect;
    ForepersonMenuForm fpMenuForm;
    FranchiseeMenuForm franchiseeMenuForm;
    ReceptionistMenuForm receptionMenuForm;
    ArrayList<Customer> MOTReminders = new ArrayList<Customer>();
    String motDate;
    DefaultTableModel motModel;

    /**
     * Creates new form MotRemindersForm
     */
    public MotRemindersForm() {
        initComponents();
    }

    public MotRemindersForm(ArrayList<Customer> MOTReminders, String motDate, Control c) {
        initComponents();
        this.MOTReminders.addAll(MOTReminders);
        this.motDate = motDate;
        control = c;
        dbConnect = control.getDatabaseConnector();
        control.getWindowList().add(this);
    }

    public MotRemindersForm(Control c) {
        initComponents();
        control = c;
        dbConnect = control.getDatabaseConnector();
        control.getWindowList().add(this);

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public MotRemindersForm(Control c, ForepersonMenuForm fpmf) {
        initComponents();
        control = c;
        fpMenuForm = fpmf;
        dbConnect = control.getDatabaseConnector();
        control.getWindowList().add(this);

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public MotRemindersForm(Control c, FranchiseeMenuForm fmf) {
        initComponents();
        control = c;
        franchiseeMenuForm = fmf;
        dbConnect = control.getDatabaseConnector();
        control.getWindowList().add(this);

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public MotRemindersForm(Control c, ReceptionistMenuForm rmf) {
        initComponents();
        control = c;
        receptionMenuForm = rmf;
        dbConnect = control.getDatabaseConnector();
        control.getWindowList().add(this);

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    @Override
    public void dispose() {
        super.dispose();
        control.terminateThread();
        control.OpenMenu();
    }

    public void initMotTable() {
        if (!MOTReminders.isEmpty()) {
            // TODO add your handling code here:
            motModel = (DefaultTableModel) jTable1.getModel();
            motModel.setRowCount(0);
            System.out.println(MOTReminders.size() + "MARIME");
            for (Customer customer : MOTReminders) {
                Object[] row = {customer.getName(), customer.getVehicles().get(0).getReg_num(),
                    motDate, customer};
                motModel.addRow(row);
            }
        }
    }

    public void setValues() {
        this.MOTReminders.addAll(MOTReminders);
        this.motDate = motDate;
        
        initMotTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer Name", "Reg Num", "Test Date", "Customer Ref"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("MOT REMINDERS");

        jButton1.setText("Display All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        initMotTable();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        java.util.Date date;
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        date = new java.util.Date();
        String currDate = dateFormat.format(date);;
        for (int rows = 0; rows < motModel.getRowCount(); rows++) {
            Customer customer = (Customer) jTable1.getValueAt(rows, 3);
            //GETTING MISSING INVOICE DATA

            // TODO OPEN INVOICE IN PDF
            String dest = "resources/MOTReminder" + customer.getVehicles()
                    .get(0).getReg_num() + ".pdf";
            PdfWriter writer = null;
            try {
                writer = new PdfWriter(dest);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(UpdateJobForm.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Creating a PdfDocument       
            PdfDocument pdfDoc = new PdfDocument(writer);

            PdfFont bold = null;
            try {
                bold = PdfFontFactory.createFont(BOLD, true);
            } catch (IOException ex) {
                Logger.getLogger(UpdateJobForm.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Adding a new page 
            pdfDoc.addNewPage();

            // Creating a Document
            Document document = new Document(pdfDoc);
            //Adding INvoice number
            document.add(
                    new Paragraph()
                            .setTextAlignment(TextAlignment.RIGHT)
                            .setMultipliedLeading(1)
                            .add(new Text(String.format("REMINDER - MoT TEST "
                                    + "DUE \n")).setFontSize(14))
                            .add(currDate));
            //Adding adresses
            document.add(getAddressTable(customer.getName(),
                    customer.getAddress(), customer.getPostcode(),
                    bold));
            document.add(new Paragraph().add("\n"));
            //Adding Vehicle details
            document.add(
                    new Paragraph()
                            .setTextAlignment(TextAlignment.LEFT)
                            .setMultipliedLeading(1)
                            .add(new Text(String.format("Dear %s,\n", customer.getName())))
                            .add(new Text("\n"))
                            .add(new Text(String.format("Vehicle Registraion No: "
                                    + "%s\n", customer.getVehicles().get(0).getReg_num())))
                            .add(new Text(String.format("Renewal Test Date:  %s\n",
                                    motDate)))
            );
            document.add(new Paragraph().add("\n"));

            document.add(new Paragraph().add(new Text("According to our "
                    + "records, the above vehicle is due to have "
                    + "it's MoT certificate renewed on the date shown. \n"
                    + "Account Holders customers such as yourself are "
                    + "assured of our prompt attention, and we hope "
                    + "that you will use our services on this occasion "
                    + "in order to have the necessary test carried "
                    + "out on your vehicle. \n")));

            //Ending
            document.add(new Paragraph()
                    .add(new Text("\n"))
                    .add(new Text("Yours sincerely,\n"))
                    .add(new Text("\n"))
                    .add(new Text("G. Lancaster"))
            );
            // Closing the document
            document.close();

            System.out.println("PDF Created");

            try {

                File pdfFile = new File(dest);
                if (pdfFile.exists()) {

                    if (Desktop.isDesktopSupported()) {
                        Desktop.getDesktop().open(pdfFile);
                    } else {
                        System.out.println("Awt Desktop is not supported!");
                    }

                } else {
                    System.out.println("File is not exists!");
                }

                System.out.println("Done");

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        //UPDATE MOT DATE INSIDE DB TO PREVENT FURTHER REMINDERS TODAY
//            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
//            LocalDate tommorow = LocalDate.parse(
//                    currDate, formatter);
//            
//            String reminderUpdate = "UPDATE `garitsdb`.`MOT_Date` SET"
//                    + " `today` = "+ tommorow.plusDays(1)
//                    + " WHERE (`id` = '1');"; 
//            try {
//                Connection conn = dbConnect.connect();
//                conn.setAutoCommit(false);
//                PreparedStatement statement = conn.prepareStatement(reminderUpdate);
//                statement.execute();
//                conn.commit();
//                conn.setAutoCommit(true);
//            }
//            catch (Exception exc) {
//                exc.printStackTrace();
//            }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MotRemindersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MotRemindersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MotRemindersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MotRemindersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MotRemindersForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
